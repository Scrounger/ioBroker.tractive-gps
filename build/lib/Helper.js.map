{
  "version": 3,
  "sources": ["../../src/lib/Helper.ts"],
  "sourcesContent": ["const systemSecret = 'Zgfr56gFe87jJOM';\n\n/**\n * Decrypt the password/value with given key\n * @param secret - Secret key\n * @param value - value to decrypt\n */\nexport function decrypt(secret: string, value: string | undefined) {\n\tif (value === undefined) {\n\t\tvalue = secret;\n\t\tsecret = systemSecret;\n\t}\n\tlet result = '';\n\tfor (let i = 0; i < value.length; i++) {\n\t\tresult += String.fromCharCode(secret[i % secret.length].charCodeAt(0) ^ value.charCodeAt(i));\n\t}\n\treturn result;\n}\n\n/**\n * Encrypt the password/value with given key\n * @param secret - Secret key\n * @param value - value to encrypt\n */\nexport function encrypt(secret: string, value: string | undefined) {\n\tif (value === undefined) {\n\t\tvalue = secret;\n\t\tsecret = systemSecret;\n\t}\n\tlet result = '';\n\tfor (let i = 0; i < value.length; i++) {\n\t\tresult += String.fromCharCode(secret[i % secret.length].charCodeAt(0) ^ value.charCodeAt(i));\n\t}\n\treturn result;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAM,eAAe;AAOd,SAAS,QAAQ,QAAgB,OAA2B;AAClE,MAAI,UAAU,QAAW;AACxB,YAAQ;AACR,aAAS;AAAA,EACV;AACA,MAAI,SAAS;AACb,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACtC,cAAU,OAAO,aAAa,OAAO,IAAI,OAAO,QAAQ,WAAW,CAAC,IAAI,MAAM,WAAW,CAAC,CAAC;AAAA,EAC5F;AACA,SAAO;AACR;AAOO,SAAS,QAAQ,QAAgB,OAA2B;AAClE,MAAI,UAAU,QAAW;AACxB,YAAQ;AACR,aAAS;AAAA,EACV;AACA,MAAI,SAAS;AACb,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACtC,cAAU,OAAO,aAAa,OAAO,IAAI,OAAO,QAAQ,WAAW,CAAC,IAAI,MAAM,WAAW,CAAC,CAAC;AAAA,EAC5F;AACA,SAAO;AACR;",
  "names": []
}
